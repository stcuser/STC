<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<CSP name="stc/js/controllers/PersonCtrl.js" application="/csp/third/" default="1"><![CDATA[
'use strict';
//dddddddddddddddddddddвв

controllersModule.controller('PersonCtrl', function($scope, $location, $timeout, $routeParams, PersonSrvc, OrderSrvc, CompanySrvc, UtilsSrvc){
    $scope.personForm = {visible: true, person:{company:{exist:{}}}};

    $scope.personForm.init = function(){
        if ($routeParams.order){
            $scope.personForm.companyDisabled = true;
            
            if ($routeParams.personId){
                $scope.personForm.caption = "Редактирование слушателя";
                $scope.personForm.loadStudentFromOrder();   
            }
            else{
                $scope.personForm.caption = "Дабавление слушателя";   
                $scope.personForm.person.company.exist.id = parseInt($routeParams.comp);
            }
        }
    };

    $scope.personForm.save = function(){
        if ($routeParams.order){
            PersonSrvc.saveStudent({student: $scope.personForm.person, order: {code: $routeParams.order}}).then(
                function(data){
                    $scope.personForm.visible = false;
                    
                    switch(data.result){
                        case 1:
                            $scope.personForm.alert = UtilsSrvc.getAlert('Успех!', 'Данные слушателя обновлены', 'success', true);
                            break;
                        case 2:
                            $scope.personForm.alert = UtilsSrvc.getAlert('Успех!', 'Слушатель создан и добавлен', 'success', true); 
                            break;
                        case 3:
                            $scope.personForm.alert = UtilsSrvc.getAlert('Внимание!', 'Был найден другой слушатель с email: ' + $scope.personForm.person.email + ', он будет добавлен в вашу заявку. Вы не имеете прав для его редактрования или удаления из бызы данных, но можете удалить из заявки. Для разрешения конфликта свяжитесь с администратором. Закройте сообщение для возвращения к заявке. Обновите страницу для добавления нового слушателя.', 'info', true);
                            break;        
                    }
                    
                    $scope.personForm.alert.closeMethod = function(){$location.path('/updateorder').search({code: $routeParams.order, stud: 1});} 
                },
                function(response){
                    $scope.personForm.alert = UtilsSrvc.getAlert('Ошибка !', response.data, 'error', true);
                }); 
        }  
    };

    $scope.personForm.loadStudentFromOrder = function(){
        PersonSrvc.getStudentFromOrder($routeParams.order, $routeParams.personId).then(
            function(data){
                $scope.personForm.person = data;
                $scope.personForm.person.company.exist = {id: data.company.id};
            },
            function(response){
                $scope.personForm.alert = UtilsSrvc.getAlert('Ошибка !', response.data, 'error', true);
            }); 
    };

/*
    $scope.personForm.loadPerson = function(id){
        PersonSrvc.getPerson(id).then(
            function(data){
                $scope.personForm.person = data;
            },
            function(response){
                $scope.alert = UtilsSrvc.getAlert('Ошибка !', response.data, 'error', true);
            }); 
    };

    $scope.personForm.loadOrder = function(){
        OrderSrvc.getApprovedOrderByCode($routeParams.order).then(
            function(data){
                $scope.personForm.order = data;
                $scope.personForm.companyDisabled = true;
           		$scope.personForm.person.company.exist.id = $scope.personForm.order.contact.company.id;
            },
            function(response){
                $scope.alert = UtilsSrvc.getAlert('Ошибка !', response.data, 'error', true);
            });
    };
*/
    $scope.personForm.saveStudent = function(){
        PersonSrvc.saveStudent($scope.personForm.person, $routeParams.order).then(
            function(data){
                $scope.alert = UtilsSrvc.getAlert('Слушатель добавлен !', response.data, 'success', true);
            },
            function(response){
                $scope.alert = UtilsSrvc.getAlert('Ошибка !', response.data, 'error', true);
            }); 
    };
/*
    $scope.personForm.loadApprovedOrder = function(code){
        OrderSrvc.getApprovedOrderByCode(code).then(
            function(data){
                $scope.personForm.contact.company = data.company;
                $scope.personForm.order = data;
            },
            function(response){
                $scope.alert = UtilsSrvc.getAlert('Ошибка !', response.data, 'error', true);
            }); 
    };
*/
    $scope.personForm.loadCompanies = function(){
        CompanySrvc.getAllCompaniesShortInfo().then(
            function(data){
                $scope.personForm.companies = data;
            },
            function(response){
                $scope.alert = UtilsSrvc.getAlert('Ошибка !', response.data, 'error', true);
            }); 
    };

    $scope.personForm.init();
    $scope.personForm.loadCompanies();
});

]]></CSP>
</Export>
