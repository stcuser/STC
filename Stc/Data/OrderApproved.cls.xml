<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Stc.Data.OrderApproved">
<Description>
Чистая заявка, одобрена админом</Description>
<ClassType>persistent</ClassType>
<Super>Stc.Data.Order</Super>
<TimeCreated>63098,13302.19979</TimeCreated>

<Property name="Company">
<Description>
Компания - заказчик</Description>
<Type>Company</Type>
<Required>1</Required>
<Parameter name="XMLREFERENCE" value="ID"/>
</Property>

<Property name="Students">
<Description>
Слушатели, которых добавил заказчик</Description>
<Type>Person</Type>
<Collection>array</Collection>
</Property>

<Property name="AccessCode">
<Description>
Код доступа к заявке для заказчика для полного заполнения</Description>
<Type>%String</Type>
</Property>

<Index name="AccessCodeIdx">
<Properties>AccessCode</Properties>
<Unique>1</Unique>
</Index>

<Method name="%OnNew">
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[
	set ..CreatedTS = $ZDATETIME($NOW(), 3)
	set ..AccessCode = $SYSTEM.Util.CreateGUID()
	set ..OrderStatus = ##class(OrderStatus).NameIdxOpen("Одобрена")
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="GetProxyObject">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String</FormalSpec>
<ReturnType>%ZEN.proxyObject</ReturnType>
<Implementation><![CDATA[
	set obj = ..%OpenId(id)
	quit obj.ConvertToProxyObject()
]]></Implementation>
</Method>

<Method name="ConvertToProxyObject">
<ReturnType>%ZEN.proxyObject</ReturnType>
<Implementation><![CDATA[
	set proxy = ##class(%ZEN.proxyObject).%New()
	
	set proxy.id = ..%Id()
	set proxy.code = ..AccessCode
	set proxy.city = ..City.ConvertToProxyObject()
	set proxy.course = ..Course.ConvertToProxyObject(1)
	set proxy.contact = ..Company.Contact.ConvertToProxyObject()
	set proxy.contact.partner = ..Partner
	set proxy.status = ..OrderStatus.%Id()
	set proxy.date = $ZDATE(..TrainingDate, 3)
	set proxy.createdTS = ..CreatedTS
	
	set proxy.studentsNumber = ..Students.Count()

	quit proxy
]]></Implementation>
</Method>

<Method name="Create">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[dirtyId:%String,&status]]></FormalSpec>
<ReturnType>Stc.Data.OrderApproved</ReturnType>
<Implementation><![CDATA[
	set approved = ..%New()
	
	try{
		TSTART
		
		set dirty = ##class(Stc.Data.OrderDirty).%OpenId(dirtyId,,.status)

		set approved.Partner = dirty.Partner
		set approved.TrainingDate = dirty.TrainingDate
		set approved.Course = dirty.Course
		set approved.City = dirty.City
		set approved.Company = dirty.Company
		
		do approved.Students.SetAt(approved.Company.Contact, approved.Company.Contact.%Id())

		$$$THROWONERROR(status, approved.%Save())
		$$$THROWONERROR(status, ##class(Stc.Data.OrderDirty).%DeleteId(dirtyId))
		
		$$$THROWONERROR(status, ##class(Stc.Utils.Email).SendMail(approved.Company.Contact.Email, "Доступ к заявке: <a href='http://localhost:57774/csp/third/stc/index.csp#/updateorder?code="_approved.AccessCode_"'>Жми</a>"))
		
		TCOMMIT
	}
	catch ex{
		TROLLBACK
		set status = ex.AsStatus()
	}
	
	quit approved
]]></Implementation>
</Method>

<Method name="DeleteStudent">
<FormalSpec>studentId:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set status = $$$OK
	do ..Students.RemoveAt(studentId)
	
	quit ##class(Person).Delete(studentId)
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>OrderApprovedDefaultData</DefaultData>
<Data name="OrderApprovedDefaultData">
<Subscript>"OrderApproved"</Subscript>
<Value name="1">
<Value>Company</Value>
</Value>
<Value name="2">
<Value>OrderStatus</Value>
</Value>
<Value name="3">
<Value>AccessCode</Value>
</Value>
</Data>
<Data name="Students">
<Attribute>Students</Attribute>
<Structure>subnode</Structure>
<Subscript>"Stc.Data.OrderApproved.Students"</Subscript>
</Data>
</Storage>
</Class>
</Export>
