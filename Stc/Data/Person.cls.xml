<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Stc.Data.Person">
<Description>
Сотрудник компании, преподаватель, слушатель</Description>
<Super>%Persistent,%XML.Adaptor</Super>
<TimeCreated>63098,13287.442379</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
// Property Company As Company(XMLREFERENCE = "ID") [ Required ];

]]></Content>
</UDLText>

<Property name="Company">
<Description>
Сотрудник компании</Description>
<Type>Stc.Data.Company</Type>
<Cardinality>one</Cardinality>
<Inverse>Employees</Inverse>
<Relationship>1</Relationship>
<Required>1</Required>
<Parameter name="XMLPROJECTION" value="XELEMENT"/>
<Parameter name="XMLREFERENCE" value="ID"/>
</Property>

<Index name="CompanyIdx">
<Properties>Company</Properties>
</Index>

<Property name="FirstName">
<Description>
Имя</Description>
<Type>%String</Type>
</Property>

<Property name="LastName">
<Description>
Фамилия</Description>
<Type>%String</Type>
</Property>

<Property name="MiddleName">
<Description>
Отчество</Description>
<Type>%String</Type>
</Property>

<Property name="Email">
<Description>
Почта</Description>
<Type>%String</Type>
</Property>

<Property name="Phone">
<Description>
Телефон</Description>
<Type>%String</Type>
</Property>

<Property name="Skype">
<Description>
Скайп</Description>
<Type>%String</Type>
</Property>

<Index name="EmailIdx">
<Properties>Email</Properties>
<Unique>1</Unique>
</Index>

<Method name="GetProxyObject">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String</FormalSpec>
<ReturnType>%ZEN.proxyObject</ReturnType>
<Implementation><![CDATA[
	set obj = ..%OpenId(id)
	quit obj.ConvertToProxyObject()
]]></Implementation>
</Method>

<Method name="ConvertToProxyObject">
<ReturnType>%ZEN.proxyObject</ReturnType>
<Implementation><![CDATA[
	set proxy = ##class(%ZEN.proxyObject).%New()
	set proxy.id = ..%Id()
	set proxy.lastName = ..LastName
	set proxy.firstName = ..FirstName
	set proxy.middleName = ..MiddleName
	set proxy.email = ..Email
	set proxy.phone = ..Phone
	set proxy.skype = ..Skype
	
	set proxy.company = ..Company.ConvertToProxyObject(1)
	
	quit proxy
]]></Implementation>
</Method>

<Method name="Create">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[data:%RegisteredObject,&status]]></FormalSpec>
<ReturnType>Stc.Data.Person</ReturnType>
<Implementation><![CDATA[
	set person = ..%New()
	
	try{
		TSTART
		
		do person.SetData(data)
		$$$THROWONERROR(status, person.%Save())
		
		TCOMMIT
	}
	catch ex {
		TROLLBACK
		set status = ex.AsStatus()
	}

	quit person
]]></Implementation>
</Method>

<Method name="Update">
<ClassMethod>1</ClassMethod>
<FormalSpec>data:%RegisteredObject</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set status = $$$OK
	
	try{
		TSTART
			
		set person = ..%OpenId(data.id)
		do person.SetData(data)
		$$$THROWONERROR(status, person.%Save())
		
		TCOMMIT
	}
	catch ex{
		TROLLBACK
		set status = ex.AsStatus()
	}
	
	quit status
]]></Implementation>
</Method>

<Method name="SetData">
<FormalSpec>data:%RegisteredObject</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ..LastName = $ZCONVERT(data.lastName, "I","UTF8")
	set ..FirstName = $ZCONVERT(data.firstName, "I","UTF8")
	set ..MiddleName = $ZCONVERT(data.middleName, "I","UTF8")
	set ..Email = $ZCONVERT(data.email, "I","UTF8")
	set ..Phone = $ZCONVERT(data.phone, "I","UTF8")
	set ..Skype = $ZCONVERT(data.skype, "I","UTF8")
	
	if (data.company.exist) set data.company.id = data.company.exist.id
	
	set ..Company = ##class(Stc.Data.Company).%OpenId(data.company.id)
	
	quit $$$OK
]]></Implementation>
</Method>

<Method name="Delete">
<ClassMethod>1</ClassMethod>
<FormalSpec>personId:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	if (..IsEditable(personId) = 1) quit ##class(Person).%DeleteId(personId)
	
	quit 0
]]></Implementation>
</Method>

<Method name="IsEditable">
<ClassMethod>1</ClassMethod>
<FormalSpec>personId:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	set id = ""
	set countId = ""
	
	&sql(SELECT ID INTO:id FROM Stc_Data.Company WHERE Contact = :personId)
	if (id = ""){
		&sql(SELECT ID INTO:id FROM Stc_Data.SubGroup_Students WHERE Students = :personId)
		
		if (id = ""){
			&sql(SELECT ID INTO:id FROM Stc_Data.Course_Teachers WHERE Teachers = :personId)	
			
			if (id = ""){
				&sql(SELECT COUNT(ID) INTO:countId FROM Stc_Data.OrderApproved_Students WHERE Students = :personId)
			}
		}
	}
 
	if (id = "") && (countId < 2) quit 1
	
	quit 0
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^Stc.Data.PersonD</DataLocation>
<DefaultData>PersonDefaultData</DefaultData>
<IdLocation>^Stc.Data.PersonD</IdLocation>
<IndexLocation>^Stc.Data.PersonI</IndexLocation>
<StreamLocation>^Stc.Data.PersonS</StreamLocation>
<ExtentSize>100000</ExtentSize>
<Data name="PersonDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Company</Value>
</Value>
<Value name="3">
<Value>FirstName</Value>
</Value>
<Value name="4">
<Value>LastName</Value>
</Value>
<Value name="5">
<Value>MiddleName</Value>
</Value>
<Value name="6">
<Value>Email</Value>
</Value>
<Value name="7">
<Value>Phone</Value>
</Value>
<Value name="8">
<Value>Skype</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
